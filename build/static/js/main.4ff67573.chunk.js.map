{"version":3,"sources":["store/reducers/auth.ts","store/reducers/console.ts","store/reducers/history.ts","store/reducers/index.ts","helpers/sendsay.js","store/actions/index.ts","store/sagas/auth.js","store/sagas/console.js","store/sagas/index.js","store/index.ts","pages/LoginPage/styled.ts","hooks/index.ts","containers/LoginForm/styled.tsx","components/Logo/styled.ts","components/Logo/index.tsx","containers/FormField/styled.ts","components/FormFieldHeader/styled.ts","components/FormFieldHeader/index.tsx","constants/index.ts","components/FormFieldInput/styled.ts","components/FormFieldInput/index.tsx","containers/FormField/index.tsx","components/Button/styled.ts","components/Loader/styled.ts","components/Loader/index.tsx","components/Button/index.tsx","components/LinkView/styled.ts","components/LinkView/index.tsx","components/ErrorView/styled.ts","components/ErrorView/index.tsx","containers/LoginForm/index.tsx","pages/LoginPage/index.tsx","pages/ConsolePage/styled.ts","containers/ConsoleHeader/styled.ts","containers/ConsoleTitle/styled.ts","containers/ConsoleTitle/index.tsx","containers/ConsoleNavigation/styled.ts","containers/ConsoleNavigation/index.tsx","containers/ConsoleHeader/index.tsx","containers/ConsoleHistory/styled.ts","components/RequestItem/styled.ts","components/Dropdown/styled.ts","components/Dropdown/index.tsx","components/RequestItem/index.tsx","containers/ConsoleHistory/index.tsx","containers/ConsoleMain/styled.ts","components/Text/styled.ts","components/Text/index.tsx","containers/ConsoleMain/index.tsx","containers/ConsoleFooter/styled.ts","containers/ConsoleFooter/index.tsx","pages/ConsolePage/index.tsx","App.tsx","index.js"],"names":["authReducer","createSlice","name","initialState","loading","error","errorMessage","sessionKey","login","sublogin","reducers","authenticate","state","action","authenticateSuccess","payload","authenticateFailure","logout","setErrorMessage","actions","consoleReducer","requestMessage","responseMessage","setRequest","request","requestSuccess","requestFailure","historyReducer","requestHistory","setHistory","removeHistory","filter","el","clearHistory","auth","console","history","sendsay","Sendsay","setSessionFromCookie","SendsayCustom","authenticateCheck","createAction","authenticateCheckSaga","authenticateSaga","logoutSaga","root","api","id","call","password","then","document","cookie","session","catch","err","log","errorPayload","explain","put","all","takeLatest","type","requestSage","prepareHistory","currentRequest","filterHistory","slice","select","JSON","parse","data","response","stringify","currentHistory","fork","sagaMiddleware","createSagaMiddleware","persistAuthConfig","key","storage","blacklist","persistHistoryConfig","store","configureStore","reducer","combineReducers","persistReducer","rootReducer","middleware","persistor","persistStore","run","rootSaga","Wrapper","styled","div","useTypedSelector","useSelector","useAppDispatch","useDispatch","useAppSelector","FormContainer","FormTitle","h2","LogoStyled","img","Logo","src","alt","FormFieldContainer","FormFieldTitle","FormFieldOptional","span","React","memo","title","InputForm","input","FormFieldInput","value","handleChange","handleBlur","onChange","onBlur","FormField","ButtonUi","button","disabled","LoaderSVG","svg","Loader","width","height","viewBox","fill","xmlns","opacity","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","submit","onClick","Link","LinkView","View","MessageContainer","Title","Message","ErrorView","validationSchema","yup","shape","required","LoginForm","dispatch","doLogin","useCallback","values","initialValues","validateOnBlur","onSubmit","props","dirty","isValid","handleSubmit","withRouter","isLoggedIn","length","useEffect","push","ConsolePageContainer","ConsoleHeaderContainer","header","ConsoleTitleContainer","ConsoleTitle","ConsoleNavigationContainer","SubLoginView","Logout","ConsoleNavigation","useState","isFullScreen","setIsFullScreen","loguot","loginTitle","switchFullScreen","exitFullscreen","body","requestFullscreen","ConsoleHeader","ConsoleHistoryContainer","CloseButton","RequestItemContainer","ul","RequestItemStatus","DropdownButton","DropdownContainer","isOpen","DropdownItem","li","destroy","setIsOpen","ref","useRef","dispatchRequest","navigator","clipboard","writeText","RequestItem","ConsoleHistory","map","ConsoleMainContainer","TextArea","textarea","readonly","readOnly","e","target","ConsoleMain","ConsoleFooterContainer","FormatButton","setIsValid","formatRequest","str","prepareString","formatString","sendRequest","App","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4ff67573.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  loading: false,\n  error: false,\n  errorMessage: {},\n  sessionKey: null,\n  login: null,\n  sublogin: null\n}\n\nconst authReducer = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    authenticate: (state, action) => {\n      state.loading = true\n      state.error = false\n    },\n    authenticateSuccess: (state, { payload }) => {\n      state.loading = false\n      state.sessionKey = payload.sessionKey\n      state.login = payload.login\n      state.sublogin = payload.sublogin\n    },\n    authenticateFailure: (state) => {\n      state.loading = false\n      state.sessionKey = null\n      state.login = null\n      state.sublogin = null\n    },\n    logout: (state) => {\n      state.loading = false\n      state.sessionKey = null\n    },\n    setErrorMessage: (state, { payload }) => {\n      state.error = true\n      state.errorMessage = { ...payload }\n    }\n  }\n})\n\nexport default authReducer.reducer\nexport const {\n  authenticate,\n  authenticateFailure,\n  authenticateSuccess,\n  logout,\n  setErrorMessage\n} = authReducer.actions\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  requestMessage: '',\n  error: false,\n  loading: false,\n  responseMessage: ''\n}\n\nconst consoleReducer = createSlice({\n  name: 'console',\n  initialState,\n  reducers: {\n    setRequest: (state, { payload }) => {\n      state.requestMessage = payload\n    },\n    request: (state, { payload }) => {\n      state.loading = true\n      state.error = false\n    },\n    requestSuccess: (state, { payload }) => {\n      state.loading = false\n      state.responseMessage = payload\n    },\n    requestFailure: (state, { payload }) => {\n      state.loading = false\n      state.error = true\n      state.responseMessage = payload\n    }\n  }\n})\n\nexport default consoleReducer.reducer\n\nexport const {\n  setRequest,\n  request,\n  requestFailure,\n  requestSuccess\n} = consoleReducer.actions\n","import { createSlice } from '@reduxjs/toolkit'\n\ninterface IHistoryItem {\n  request: string\n  error: boolean\n}\n\nconst initialState = {\n  requestHistory: []\n}\n\nconst historyReducer = createSlice({\n  name: 'history',\n  initialState,\n  reducers: {\n    setHistory: (state, { payload }) => {\n      state.requestHistory = payload\n    },\n    removeHistory: (state, { payload }) => {\n      state.requestHistory = state.requestHistory.filter(\n        (el: IHistoryItem) => el.request !== payload\n      )\n    },\n    clearHistory: (state) => {\n      state.requestHistory = []\n    }\n  }\n})\n\nexport const {\n  setHistory,\n  removeHistory,\n  clearHistory\n} = historyReducer.actions\nexport default historyReducer.reducer\n","import auth from './auth'\nimport console from './console'\nimport history from './history'\n\nexport default {\n  auth,\n  console,\n  history\n}\n","import Sendsay from 'sendsay-api';\nconst sendsay = new Sendsay();\nsendsay.setSessionFromCookie('sendsay_session');\n\nexport default class SendsayCustom {\n  static sendsay = sendsay;\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const authenticateCheck = createAction('auth/authenticateCheck')\n","import { all, put, call, takeLatest } from 'redux-saga/effects'\nimport api from '../../helpers/sendsay'\n\nimport {\n  authenticate,\n  authenticateSuccess,\n  authenticateFailure,\n  logout,\n  setErrorMessage\n} from '../reducers/auth'\nimport { authenticateCheck } from '../actions'\n\nexport function* authenticateCheckSaga() {\n  try {\n    yield api.sendsay.request({\n      action: 'pong'\n    })\n  } catch (error) {\n    if (error.id === 'error/auth/failed') {\n      yield call(logoutSaga)\n    }\n  }\n}\n\nexport function* authenticateSaga({ payload }) {\n  let error\n  let errorPayload\n\n  yield api.sendsay\n    .login({\n      login: payload.login,\n      sublogin: payload.sublogin,\n      password: payload.password\n    })\n    .then(() => {\n      error = false\n      document.cookie = `sendsay_session=${api.sendsay.session}`\n    })\n    .catch((err) => {\n      error = true\n      document.cookie = ''\n\n      console.log('err', err)\n      errorPayload = { explain: err.explain, id: err.id }\n    })\n\n  if (error) yield put(setErrorMessage(errorPayload))\n\n  yield put(\n    error\n      ? authenticateFailure()\n      : authenticateSuccess({\n          sessionKey: api.sendsay.session,\n          login: payload.login,\n          sublogin: payload.sublogin\n        })\n  )\n}\n\nexport function* logoutSaga() {\n  yield put(authenticateFailure())\n  document.cookie = ''\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(authenticate.type, authenticateSaga),\n    takeLatest(authenticateCheck.type, authenticateCheckSaga),\n    takeLatest(logout.type, logoutSaga)\n  ])\n}\n","import { all, put, takeLatest, select } from 'redux-saga/effects'\nimport api from '../../helpers/sendsay'\n\nimport { request, requestSuccess, requestFailure } from '../reducers/console'\nimport { setHistory } from '../reducers/history'\n\nfunction prepareHistory(history, currentRequest, error) {\n  const filterHistory = history.filter((el) => el.request !== currentRequest)\n  return [{ request: currentRequest, error }, ...filterHistory].slice(0, 15)\n}\n\nexport function* requestSage({ payload }) {\n  const { requestHistory } = yield select((state) => state.history)\n  let error = false\n  let response\n\n  yield api.sendsay\n    .request(JSON.parse(payload))\n    .then((data) => {\n      response = JSON.stringify(data, null, 4)\n    })\n    .catch((err) => {\n      error = true\n      response = JSON.stringify(err, null, 4)\n    })\n\n  const currentHistory = prepareHistory(requestHistory, payload, error)\n\n  yield put(error ? requestFailure(response) : requestSuccess(response))\n  yield put(setHistory(currentHistory))\n}\n\nexport default function* root() {\n  yield all([takeLatest(request.type, requestSage)])\n}\n","import { all, fork } from 'redux-saga/effects'\n\nimport login from './auth'\nimport console from './console'\n\nexport default function* root() {\n  yield all([fork(login), fork(console)])\n}\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst persistAuthConfig = {\n  key: 'auth',\n  storage,\n  blacklist: ['errorMessage', 'error']\n}\n\nconst persistHistoryConfig = {\n  key: 'history',\n  storage\n}\n\nconst store = configureStore({\n  reducer: combineReducers({\n    auth: persistReducer(persistAuthConfig, rootReducer.auth),\n    console: rootReducer.console,\n    history: persistReducer(persistHistoryConfig, rootReducer.history)\n  }),\n  middleware: [sagaMiddleware]\n})\n\nlet persistor = persistStore(store)\n\nsagaMiddleware.run(rootSaga)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport { store, persistor }\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport { RootState, AppDispatch } from '../store'\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import styled from 'styled-components'\n\nexport const FormContainer = styled.div`\n  display: flex;\n  margin: 20px 0;\n  justify-content: center;\n  flex-direction: column;\n  width: 520px;\n  left: calc(50% - 520px / 2);\n  top: 222px;\n  background: #ffffff;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  padding: 40px 30px;\n`\nexport const FormTitle = styled.h2`\n  margin-bottom: 15px;\n  font-weight: 400;\n  font-size: 24px;\n`\n","import styled from 'styled-components'\n\nexport const LogoStyled = styled.img``\n","import React from 'react'\nimport { LogoStyled } from './styled'\n\nconst Logo = () => {\n  return <LogoStyled src=\"/icons/logo.svg\" alt=\"logo\" />\n}\n\nexport default Logo\n","import styled from 'styled-components'\n\nexport const FormFieldContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n","import styled from 'styled-components'\n\nexport const FormFieldContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const FormFieldTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  margin-bottom: 5px;\n`\nexport const FormFieldOptional = styled.span`\n  font-size: 12px;\n  color: #999999;\n`\n","import React from 'react'\nimport { OPTIONAL, SUBLOGIN } from '../../constants'\n\nimport { FormFieldContainer, FormFieldTitle, FormFieldOptional } from './styled'\n\nconst FormFieldHeader = ({ title }: { title: string }) => {\n  return (\n    <FormFieldContainer>\n      <FormFieldTitle>{title}</FormFieldTitle>\n      {title === SUBLOGIN && <FormFieldOptional>{OPTIONAL}</FormFieldOptional>}\n    </FormFieldContainer>\n  )\n}\n\nexport default React.memo(FormFieldHeader)\n","export const EXECUTE = 'Выполнить'\nexport const LOGIN = 'Логин'\nexport const SUBLOGIN = 'Сублогин'\nexport const PASSWORD = 'Пароль'\nexport const ENTER = 'Войти'\nexport const TITLE = 'API-консолька'\nexport const COPY = 'Скопировать'\nexport const DELETE = 'Удалить'\nexport const ERROR_LOGIN = 'Вход не вышел'\nexport const OPTIONAL = 'Опционально'\nexport const GIT = '@link-to-your-github'\nexport const SEND = 'Отправить'\nexport const FORMAT = 'Форматировать'\nexport const EXIT = 'Выйти'\n","import styled from 'styled-components'\n\nexport const InputForm = styled.input`\n  font-size: 18px;\n  width: 100%;\n  height: 40px;\n  padding: 5px 10px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  outline: none;\n  margin-bottom: 20px;\n`\n","import React from 'react'\nimport { InputForm } from './styled'\n\ntype InputType = 'text' | 'password'\n\ninterface IFormFieldInput {\n  name: string\n  type: InputType\n  value: string\n  handleChange: any\n  handleBlur: any\n}\n\nconst FormFieldInput = ({\n  type,\n  name,\n  value,\n  handleChange,\n  handleBlur\n}: IFormFieldInput) => {\n  return (\n    <InputForm\n      type={type}\n      name={name}\n      onChange={handleChange}\n      value={value}\n      onBlur={handleBlur}\n    />\n  )\n}\n\nexport default FormFieldInput\n","import React from 'react'\n\nimport { FormFieldContainer } from './styled'\n\nimport FormFieldHeader from '../../components/FormFieldHeader'\nimport FormFieldInput from '../../components/FormFieldInput'\n\ntype InputType = 'text' | 'password'\n\ninterface IFormField {\n  title: string\n  name: string\n  type: InputType\n  value: string\n  handleChange: any\n  handleBlur: any\n}\n\nconst FormField = ({\n  title,\n  name,\n  type,\n  value,\n  handleBlur,\n  handleChange\n}: IFormField) => {\n  return (\n    <FormFieldContainer>\n      <FormFieldHeader title={title} />\n      <FormFieldInput\n        name={name}\n        type={type}\n        value={value}\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      />\n    </FormFieldContainer>\n  )\n}\n\nexport default FormField\n","import styled from 'styled-components'\n\nexport const ButtonUi = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${({ disabled }) =>\n    disabled\n      ? 'linear-gradient(0deg, #C4C4C4, #C4C4C4), linear-gradient(180deg, #45A6FF 0%, #0055FB 100%)'\n      : 'linear-gradient(180deg, #45a6ff 0%, #0055fb 100%), #c4c4c4'};\n  padding: 10px 5px;\n  border-radius: 5px;\n  border: none;\n  font-weight: 500;\n  line-height: 30px;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  color: #ffffff;\n\n  height: 40px;\n  width: 110px;\n\n  &:hover {\n    cursor: pointer;\n    background: linear-gradient(\n        0deg,\n        rgba(255, 255, 255, 0.15),\n        rgba(255, 255, 255, 0.15)\n      ),\n      linear-gradient(180deg, #45a6ff 0%, #0055fb 100%), #c4c4c4;\n  }\n\n  &:focus {\n    border: 2px solid #45a5ff;\n  }\n\n  &:active {\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)),\n      linear-gradient(180deg, #45a6ff 0%, #0055fb 100%), #c4c4c4;\n  }\n`\n","import styled from 'styled-components'\n\nexport const LoaderSVG = styled.svg`\n  animation-name: loading;\n  animation-duration: 0.7s;\n  animation-iteration-count: infinite;\n  animation-timing-function: steps(8, start);\n\n  @keyframes loading {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n","import React from 'react'\n\nimport { LoaderSVG } from './styled'\n\nconst Loader = () => {\n  return (\n    <LoaderSVG\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        opacity=\"0.2\"\n        d=\"M12 2V6\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        opacity=\"0.7\"\n        d=\"M12 18V22\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M4.92999 4.92999L7.75999 7.75999\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        opacity=\"0.6\"\n        d=\"M16.24 16.24L19.07 19.07\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        opacity=\"0.9\"\n        d=\"M2 12H6\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        opacity=\"0.4\"\n        d=\"M18 12H22\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        opacity=\"0.8\"\n        d=\"M4.92999 19.07L7.75999 16.24\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        opacity=\"0.3\"\n        d=\"M16.24 7.75999L19.07 4.92999\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </LoaderSVG>\n  )\n}\n\nexport default Loader\n","import React from 'react'\n\nimport { ButtonUi } from './styled'\n\nimport Loader from '../Loader'\n\ninterface IButton {\n  title: string\n  disabled?: boolean\n  submit: any\n  loading: boolean\n}\n\nconst Button = ({ title, disabled = false, submit, loading }: IButton) => {\n  return (\n    <ButtonUi disabled={disabled} onClick={submit}>\n      {loading ? <Loader /> : title}\n    </ButtonUi>\n  )\n}\n\nexport default React.memo(Button)\n","import styled from 'styled-components'\n\nexport const Link = styled.span`\n  color: #999999;\n`\n","import React from 'react'\nimport { GIT } from '../../constants'\n\nimport { Link } from './styled'\n\nconst LinkView = () => {\n  return <Link>{GIT}</Link>\n}\n\nexport default LinkView\n","import styled from 'styled-components'\n\nexport const View = styled.div`\n  display: flex;\n  padding: 10px;\n  background: rgba(207, 44, 0, 0.1);\n  border-radius: 5px;\n  margin-bottom: 20px;\n  color: #cf2c00;\n  align-items: flex-start;\n`\n\nexport const MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  font-style: normal;\n  font-weight: normal;\n  margin-bottom: 5px;\n`\n\nexport const Message = styled.span`\n  opacity: 0.5;\n  font-size: 12px;\n`\n","import React from 'react'\n\nimport { View, MessageContainer, Title, Message } from './styled'\n\nimport { useTypedSelector } from '../../hooks'\nimport { ERROR_LOGIN } from '../../constants'\n\nconst ErrorView = () => {\n  const {\n    errorMessage: { id, explain }\n  } = useTypedSelector((state) => state.auth)\n  const error = `{id: \"${id}\", explain: \"${explain}\"}`\n\n  return (\n    <View>\n      <div>\n        <img src=\"icons/error.svg\" alt=\"error\" />\n      </div>\n      <MessageContainer>\n        <Title>{ERROR_LOGIN}</Title>\n        <Message>{error}</Message>\n      </MessageContainer>\n    </View>\n  )\n}\n\nexport default ErrorView\n","import React, { useCallback } from 'react'\nimport { Formik, Form } from 'formik'\nimport * as yup from 'yup'\n\nimport { authenticate } from '../../store/reducers/auth'\nimport { useAppSelector, useAppDispatch } from '../../hooks'\n\nimport { ILoginProps } from '../../types'\nimport { FormContainer, FormTitle } from './styled'\n\nimport Logo from '../../components/Logo'\nimport FormField from '../FormField'\nimport Button from '../../components/Button'\nimport LinkView from '../../components/LinkView'\nimport ErrorView from '../../components/ErrorView'\nimport { ENTER, LOGIN, PASSWORD, SUBLOGIN, TITLE } from '../../constants'\n\nconst validationSchema = yup.object().shape({\n  login: yup.string().required('Обязательное поле'),\n  sublogin: yup.string(),\n  password: yup.string().required('Обязательное поле')\n})\n\nconst LoginForm = () => {\n  const dispatch = useAppDispatch()\n  const { error, loading } = useAppSelector((state) => state.auth)\n\n  const doLogin = useCallback((values: ILoginProps) => {\n    dispatch(authenticate(values))\n  }, [])\n\n  return (\n    <>\n      <Logo />\n      <FormContainer>\n        <FormTitle>{TITLE}</FormTitle>\n\n        <Formik\n          initialValues={{\n            login: '',\n            sublogin: '',\n            password: ''\n          }}\n          validateOnBlur\n          onSubmit={(values) => {\n            doLogin(values)\n          }}\n          validationSchema={validationSchema}\n        >\n          {(props) => (\n            <Form>\n              {error && <ErrorView />}\n              <FormField\n                title={LOGIN}\n                type={'text'}\n                name={'login'}\n                value={props.values.login}\n                handleChange={props.handleChange}\n                handleBlur={props.handleBlur}\n              />\n              <FormField\n                title={SUBLOGIN}\n                type={'text'}\n                name={'sublogin'}\n                value={props.values.sublogin}\n                handleChange={props.handleChange}\n                handleBlur={props.handleBlur}\n              />\n              <FormField\n                title={PASSWORD}\n                type={'password'}\n                name={'password'}\n                value={props.values.password}\n                handleChange={props.handleChange}\n                handleBlur={props.handleBlur}\n              />\n              <Button\n                title={ENTER}\n                loading={loading}\n                disabled={!(props.dirty && props.isValid)}\n                submit={props.handleSubmit}\n              />\n            </Form>\n          )}\n        </Formik>\n      </FormContainer>\n\n      <LinkView />\n    </>\n  )\n}\n\nexport default LoginForm\n","import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport { Wrapper } from './styled'\n\nimport { useAppSelector } from '../../hooks'\n\nimport LoginForm from '../../containers/LoginForm'\n\ninterface ILoginPageProps extends RouteComponentProps<any> {}\n\nconst LoginPage = ({ history }: ILoginPageProps) => {\n  const isLoggedIn = useAppSelector((state) => !!state.auth.sessionKey?.length)\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push('/console')\n    }\n  }, [isLoggedIn])\n\n  return (\n    <Wrapper>\n      <LoginForm />\n    </Wrapper>\n  )\n}\n\nexport default withRouter(LoginPage)\n","import styled from 'styled-components'\n\nexport const ConsolePageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  min-width: 400px;\n  min-height: 400px;\n`\n","import styled from 'styled-components'\n\nexport const ConsoleHeaderContainer = styled.header`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`\n","import styled from 'styled-components'\n\nexport const ConsoleTitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const Title = styled.h2`\n  display: inline-block;\n  font-size: 20px;\n  font-weight: 400;\n  margin-left: 20px;\n\n  @media (max-width: 839px) {\n    display: none;\n  }\n`\n","import React from 'react'\n\nimport { Title, ConsoleTitleContainer } from './styled'\n\nimport Logo from '../../components/Logo'\nimport { TITLE } from '../../constants'\n\nconst ConsoleTitle = () => {\n  return (\n    <ConsoleTitleContainer>\n      <div>\n        <Logo />\n      </div>\n      <Title>{TITLE}</Title>\n    </ConsoleTitleContainer>\n  )\n}\n\nexport default ConsoleTitle\n","import styled from 'styled-components'\n\nexport const ConsoleNavigationContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const SubLoginView = styled.div`\n  display: flex;\n  border-radius: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  box-sizing: border-box;\n  border-radius: 5px;\n  padding: 5px 15px;\n  margin-right: 30px;\n\n  @media (max-width: 680px) {\n    display: none;\n  }\n`\nexport const Logout = styled.button`\n  display: flex;\n  align-items: center;\n  width: 82px;\n  background: #f6f6f6;\n  height: 24px;\n  margin-right: 30px;\n  border: none;\n\n  & > div {\n    margin-right: 10px;\n    font-size: 16px;\n  }\n`\n","import React, { useCallback, useState } from 'react'\n\nimport { logout } from '../../store/reducers/auth'\nimport { useAppDispatch, useAppSelector } from '../../hooks'\n\nimport { SubLoginView, Logout, ConsoleNavigationContainer } from './styled'\nimport { EXIT } from '../../constants'\n\nconst ConsoleNavigation = () => {\n  const [isFullScreen, setIsFullScreen] = useState(false)\n\n  const dispatch = useAppDispatch()\n  const { login, sublogin } = useAppSelector((state) => state.auth)\n\n  const loguot = useCallback(() => {\n    dispatch(logout())\n  }, [])\n\n  const loginTitle = `${login}${sublogin ? ` : ${sublogin}` : ''}`\n\n  const switchFullScreen = useCallback(() => {\n    if (isFullScreen) {\n      document.exitFullscreen()\n      setIsFullScreen(false)\n    } else {\n      document.body.requestFullscreen()\n      setIsFullScreen(true)\n    }\n  }, [])\n\n  return (\n    <ConsoleNavigationContainer>\n      <SubLoginView>{loginTitle}</SubLoginView>\n      <Logout onClick={loguot}>\n        <div>{EXIT}</div>\n        <img src=\"icons/log-out.svg\" alt=\"logout\" />\n      </Logout>\n      <div onClick={switchFullScreen}>\n        <img src=\"icons/full-screen.svg\" alt=\"full-screen\" />\n      </div>\n    </ConsoleNavigationContainer>\n  )\n}\n\nexport default ConsoleNavigation\n","import React from 'react'\n\nimport { ConsoleHeaderContainer } from './styled'\n\nimport ConsoleTitle from '../ConsoleTitle'\nimport ConsoleNavigation from '../ConsoleNavigation'\n\nconst ConsoleHeader = () => {\n  return (\n    <ConsoleHeaderContainer>\n      <ConsoleTitle />\n      <ConsoleNavigation />\n    </ConsoleHeaderContainer>\n  )\n}\n\nexport default ConsoleHeader\n","import styled from 'styled-components'\n\n// export const ConsoleHistoryContainer = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   padding: 10px 15px;\n//   border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n// `\n\nexport const ConsoleHistoryContainer = styled.div`\n  display: flex;\n  padding: 10px 15px;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  overflow-x: auto;\n  padding-right: 50px;\n  min-height: 50px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const CloseButton = styled.button`\n  display: flex;\n  position: absolute;\n  border: none;\n  right: 0;\n  justify-content: center;\n  align-items: center;\n\n  background: #f6f6f6;\n  width: 50px;\n  height: 48px;\n  border-left: 1px solid rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\n// export const CloseButton = styled.button`\n//   background: transparent;\n//   padding: 0;\n//   border: none;\n//   position: fixed;\n//   width: 50px;\n//   border-left: 1px solid #c4c4c4;\n//   right: 0;\n//   top: 55px;\n//   cursor: pointer;\n//   background: #f6f6f6;\n\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     background: linear-gradient(\n//       269.93deg,\n//       #f6f6f6 0.06%,\n//       rgba(246, 246, 246, 0) 99.93%\n//     );\n//     width: 15px;\n//     height: 100%;\n//     top: 0;\n//     left: -16px;\n//   }\n// `\n\nexport const HistoryList = styled.ul`\n  display: flex;\n  align-items: center;\n`\n","import styled from 'styled-components'\n\ninterface IRequestItemStatus {\n  error: boolean\n}\n\nexport const RequestItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  background: #ffffff;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 5px 10px 5px 10px;\n  margin-right: 10px;\n`\n\nexport const RequestItemStatus = styled.div<IRequestItemStatus>`\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background: ${({ error }) => (error ? '#CF2C00' : '#30B800')};\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  margin-right: 5px;\n`\n\nexport const DropdownButton = styled.div`\n  margin-left: 5px;\n  padding: 0 5px;\n  display: flex;\n  align-items: center;\n  justify-contant: center;\n`\n","import styled from 'styled-components'\n\ninterface IDropdownProps {\n  isOpen: boolean\n  ref: any\n}\n\ninterface IDropdownItemProps {\n  destroy: boolean\n}\n\nexport const DropdownContainer = styled.ul<IDropdownProps>`\n  position: absolute;\n  z-index: 1;\n  display: ${({ isOpen }) => (isOpen ? 'flex' : 'none')};\n  flex-direction: column;\n  top: 80px;\n  padding: 5px 0px;\n  align-items: flex-start;\n\n  background: #ffffff;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 3px;\n`\nexport const DropdownItem = styled.li<IDropdownItemProps>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px 15px;\n  width: 100%;\n\n  border-top: ${({ destroy }) =>\n    destroy ? '1px solid rgba(0, 0, 0, 0.2)' : 'none'};\n\n  &:hover {\n    cursor: pointer;\n    color: white;\n    background-color: ${({ destroy }) =>\n      destroy ? '#cf2c00' : 'rgb(14, 0, 207)'};\n  }\n`\n","import React, { useEffect, useRef } from 'react'\n\nimport { DropdownContainer, DropdownItem } from './styled'\n\nimport {\n  setRequest,\n  request as dispatchRequest\n} from '../../store/reducers/console'\nimport { removeHistory } from '../../store/reducers/history'\nimport { useAppDispatch } from '../../hooks'\nimport { COPY, DELETE, EXECUTE } from '../../constants'\n\ninterface IDropdownProps {\n  isOpen: boolean\n  request: string\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst Dropdown = ({ isOpen, request, setIsOpen }: IDropdownProps) => {\n  const dispatch = useAppDispatch()\n\n  const executeRequest = () => {\n    dispatch(setRequest(JSON.stringify(JSON.parse(request), null, 4)))\n    dispatch(dispatchRequest(request))\n    setIsOpen(!isOpen)\n  }\n\n  const copyRequest = () => {\n    navigator.clipboard.writeText(JSON.stringify(JSON.parse(request), null, 4))\n    setIsOpen(!isOpen)\n  }\n\n  const removeRequest = () => {\n    dispatch(removeHistory(request))\n    setIsOpen(!isOpen)\n  }\n\n  const ref = useRef()\n\n  // TODO implement hide dropdown by outside click\n\n  // const handleOutsideClick = (event: any) => {\n  //   const path = event.path || (event.composedPath && event.composedPath())\n  //   if (!path.includes(ref.current)) {\n  //     setIsOpen(false)\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   document.body.addEventListener('click', handleOutsideClick)\n  //   return () => {\n  //     document.body.removeEventListener('click', handleOutsideClick)\n  //   }\n  // }, [])\n\n  return (\n    <DropdownContainer ref={ref} isOpen={isOpen}>\n      <DropdownItem destroy={false} onClick={executeRequest}>\n        {EXECUTE}\n      </DropdownItem>\n      <DropdownItem destroy={false} onClick={copyRequest}>\n        {COPY}\n      </DropdownItem>\n      <DropdownItem destroy={true} onClick={removeRequest}>\n        {DELETE}\n      </DropdownItem>\n    </DropdownContainer>\n  )\n}\n\nexport default React.memo(Dropdown)\n","import React, { useState } from 'react'\n\nimport {\n  RequestItemContainer,\n  RequestItemStatus,\n  DropdownButton\n} from './styled'\n\nimport Dropdown from '../Dropdown'\n\ninterface IActionProps {\n  request: string\n  error: boolean\n}\n\nconst RequestItem = ({ request, error }: IActionProps) => {\n  const [isOpen, setIsOpen] = useState(false)\n  return (\n    <RequestItemContainer>\n      <RequestItemStatus error={error} />\n      {JSON.parse(request).action}\n      <DropdownButton onClick={() => setIsOpen(!isOpen)}>\n        <img src=\"icons/dots.svg\" alt=\"dropdown\" />\n      </DropdownButton>\n      <Dropdown isOpen={isOpen} request={request} setIsOpen={setIsOpen} />\n    </RequestItemContainer>\n  )\n}\nexport default RequestItem\n","import React from 'react'\n\nimport { useAppDispatch, useAppSelector } from '../../hooks'\nimport { ConsoleHistoryContainer, CloseButton } from './styled'\nimport { clearHistory } from '../../store/reducers/history'\n\nimport RequestItem from '../../components/RequestItem'\n\ninterface IAction {\n  request: string\n  error: boolean\n}\n\nconst ConsoleHistory = () => {\n  const dispatch = useAppDispatch()\n  const { requestHistory } = useAppSelector((state) => state.history)\n\n  return (\n    <ConsoleHistoryContainer>\n      {requestHistory.map(({ request, error }: IAction) => {\n        return <RequestItem key={request} request={request} error={error} />\n      })}\n      <CloseButton onClick={() => dispatch(clearHistory())}>\n        <img src=\"icons/cross.svg\" alt=\"close\" />\n      </CloseButton>\n    </ConsoleHistoryContainer>\n  )\n}\n\nexport default ConsoleHistory\n","import styled from 'styled-components'\n\nexport const ConsoleMainContainer = styled.div`\n  display: flex;\n  padding: 30px 15px 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  flex-grow: 1;\n`\n","import styled from 'styled-components'\n\ninterface ITextAreaProps {\n  error: boolean\n}\n\nexport const TextArea = styled.textarea<ITextAreaProps>`\n  resize: none;\n  padding: 10px;\n  flex-grow: 1;\n  font-size: 18px;\n  cursor: pointer;\n  padding: 10px;\n  border: 1px solid ${({ error }) => (error ? '#CF2C00' : '#cccccc')};\n  border-radius: 5px;\n`\n","import React, { ChangeEvent } from 'react'\n\nimport { useAppDispatch } from '../../hooks'\nimport { setRequest } from '../../store/reducers/console'\n\nimport { TextArea } from './styled'\n\ninterface IPropsTextArea {\n  value: string\n  readonly?: boolean\n  error: boolean\n}\n\nconst Text = ({ value, readonly = false, error }: IPropsTextArea) => {\n  const dispatch = useAppDispatch()\n  const setValueToRequest = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    dispatch(setRequest(e.target.value))\n  }\n\n  return (\n    <TextArea\n      error={error}\n      readOnly={readonly}\n      value={value}\n      onChange={setValueToRequest}\n    />\n  )\n}\nexport default React.memo(Text)\n","import React from 'react'\n\nimport { ConsoleMainContainer } from './styled'\n\nimport { useAppSelector } from '../../hooks'\n\nimport Text from '../../components/Text'\n\nconst ConsoleMain = () => {\n  const { requestMessage, responseMessage, error } = useAppSelector(\n    (state) => state.console\n  )\n  return (\n    <ConsoleMainContainer>\n      <Text value={requestMessage} error={error} />\n      <Text value={responseMessage} readonly={true} error={error} />\n    </ConsoleMainContainer>\n  )\n}\n\nexport default ConsoleMain\n","import styled from 'styled-components'\n\nexport const ConsoleFooterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n`\n\nexport const FormatButton = styled.div`\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    color: #0055fb;\n    cursor: pointer;\n  }\n\n  & > div {\n    margin-left: 8px;\n  }\n`\n","import React, { useCallback, useState } from 'react'\n\nimport { useAppSelector, useAppDispatch } from '../../hooks'\nimport { request, setRequest } from '../../store/reducers/console'\n\nimport { ConsoleFooterContainer, FormatButton } from './styled'\n\nimport Link from '../../components/LinkView'\nimport Button from '../../components/Button'\nimport { FORMAT, SEND } from '../../constants'\n\nconst ConsoleFooter = () => {\n  const dispatch = useAppDispatch()\n  const { requestMessage, loading } = useAppSelector((state) => state.console)\n\n  // Todo implement error handling\n  const [isValid, setIsValid] = useState(false)\n\n  const formatRequest = useCallback((str: string): void => {\n    try {\n      setIsValid(false)\n      const prepareString = JSON.parse(str)\n      const formatString = JSON.stringify(prepareString, null, 4)\n      dispatch(setRequest(formatString))\n    } catch (e) {\n      setIsValid(true)\n    }\n  }, [])\n\n  const sendRequest = useCallback(() => {\n    try {\n      const prepareString = JSON.stringify(JSON.parse(requestMessage))\n      dispatch(request(prepareString))\n    } catch (e) {\n      setIsValid(true)\n    }\n  }, [requestMessage])\n\n  return (\n    <ConsoleFooterContainer>\n      <Button submit={sendRequest} title={SEND} loading={loading} />\n      <Link />\n      <FormatButton onClick={() => formatRequest(requestMessage)}>\n        <img src=\"icons/format.svg\" alt=\"format\" />\n        <div>{FORMAT}</div>\n      </FormatButton>\n    </ConsoleFooterContainer>\n  )\n}\n\nexport default React.memo(ConsoleFooter)\n","import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport { ConsolePageContainer } from './styled'\n\nimport { useAppSelector } from '../../hooks'\n\nimport ConsoleHeader from '../../containers/ConsoleHeader'\nimport ConsoleHistory from '../../containers/ConsoleHistory'\nimport ConsoleMain from '../../containers/ConsoleMain'\nimport ConsoleFooter from '../../containers/ConsoleFooter'\n\ninterface ILoginPageProps extends RouteComponentProps<any> {}\n\nconst ConsolePage = ({ history }: ILoginPageProps) => {\n  const isLoggedIn = useAppSelector((state) => !!state.auth.sessionKey?.length)\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      history.push('/')\n    }\n  }, [isLoggedIn])\n\n  return (\n    <ConsolePageContainer>\n      <ConsoleHeader />\n      <ConsoleHistory />\n      <ConsoleMain />\n      <ConsoleFooter />\n    </ConsolePageContainer>\n  )\n}\n\nexport default withRouter(ConsolePage)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { store, persistor } from './store'\nimport LoginPage from './pages/LoginPage'\nimport ConsolePage from './pages/ConsolePage'\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <LoginPage />\n            </Route>\n            <Route path=\"/console\">\n              <ConsolePage />\n            </Route>\n          </Switch>\n        </PersistGate>\n      </Provider>\n    </Router>\n  )\n}\n\nexport default App\n","import './wdyr'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport App from './App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}